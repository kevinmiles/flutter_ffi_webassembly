"use strict";
/* Copyright 2018 Mozilla Foundation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
Object.defineProperty(exports, "__esModule", { value: true });
class File {
    get data() { return this.getData(); }
    ;
    constructor(name, type = FileType.Unknown) {
        this.name = name;
        this.type = type;
    }
    getData() { return this.onGetData(); }
    setData(data) { this.onSetData(data); }
}
exports.File = File;
class Directory extends File {
    constructor(name) {
        super(name);
    }
    newFile(name, type) {
        return null;
    }
    addFile(file) {
    }
}
exports.Directory = Directory;
class Project extends Directory {
    constructor() {
        super("Project");
    }
}
exports.Project = Project;
var FileType;
(function (FileType) {
    FileType["JavaScript"] = "javascript";
    FileType["TypeScript"] = "typescript";
    FileType["HTML"] = "html";
    FileType["CSS"] = "css";
    FileType["C"] = "c";
    FileType["Cpp"] = "cpp";
    FileType["Rust"] = "rust";
    FileType["Wat"] = "wat";
    FileType["Wasm"] = "wasm";
    FileType["Directory"] = "directory";
    FileType["Log"] = "log";
    FileType["x86"] = "x86";
    FileType["Markdown"] = "markdown";
    FileType["Cretonne"] = "cretonne";
    FileType["JSON"] = "json";
    FileType["Unknown"] = "unknown";
})(FileType = exports.FileType || (exports.FileType = {}));
//# sourceMappingURL=model.js.map