export declare class File {
    name: string;
    description: string;
    type: FileType;
    parent: Directory;
    onGetData: () => string | ArrayBuffer;
    onSetData: (data: string | ArrayBuffer) => void;
    readonly data: string | ArrayBuffer;
    constructor(name: string, type?: FileType);
    getData(): string | ArrayBuffer;
    setData(data: string | ArrayBuffer): void;
}
export declare class Directory extends File {
    constructor(name: string);
    newFile(name: string, type: FileType): File;
    addFile(file: File): void;
}
export declare class Project extends Directory {
    constructor();
}
export declare enum FileType {
    JavaScript = "javascript",
    TypeScript = "typescript",
    HTML = "html",
    CSS = "css",
    C = "c",
    Cpp = "cpp",
    Rust = "rust",
    Wat = "wat",
    Wasm = "wasm",
    Directory = "directory",
    Log = "log",
    x86 = "x86",
    Markdown = "markdown",
    Cretonne = "cretonne",
    JSON = "json",
    Unknown = "unknown",
}
export interface Problem {
}
